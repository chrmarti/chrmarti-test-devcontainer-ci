name: Dev Containers CI Test

on:
  push:
    branches:
      - '**'

jobs:
  publish-devcontainer:
    name: Publish devcontainer
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # - name: Checkout CLI
      #   uses: actions/checkout@v4
      #   with:
      #     repository: 'devcontainers/cli'
      #     ref: 'chrmarti/unlikely-bass'
      #     path: 'devcontainer-cli'
      # - name: Install CLI
      #   run: |
      #     cd devcontainer-cli
      #     yarn
      #     yarn package
      #     npm i -g devcontainers-cli-*.tgz
      #     which devcontainer
      #     devcontainer --version

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64 #, linux/arm64

      - name: List builder instances
        run: docker buildx ls

      - name: skopeo version
        run: |
          skopeo --version
      # - name: Update skopeo
      #   run: |
      #     sudo apt purge buildah golang-github-containers-common podman skopeo
      #     sudo apt autoremove --purge
      #     REPO_URL="https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/unstable"
      #     source /etc/os-release
      #     sudo sh -c "echo 'deb ${REPO_URL}/x${NAME}_${VERSION_ID}/ /' > /etc/apt/sources.list.d/devel:kubic:libcontainers:unstable.list"
      #     sudo wget -qnv https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable/x${NAME}_${VERSION_ID}/Release.key -O Release.key
      #     sudo apt-key add Release.key
      #     sudo apt-get update
      #     sudo apt-get install skopeo
      #     skopeo --version

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: devcontainers/ci@v0.3
        with:
          imageName: ghcr.io/${{ github.repository }}/devcontainer
          # cacheFrom: ghcr.io/${{ github.repository }}/devcontainer
          imageTag: latest
          platform: linux/amd64 #,linux/arm64
          # configFile: .devcontainer/devcontainer.build.json
          push: always